#! /bin/bash
#
# A hook script to verify what is about to be committed.
# Called by "git commit" with no arguments. The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# This example runs a set of unittests in Python and ensures all
# tests are successful before a commit can be made. When trying to
# find tests the working directory in a pre-commit hook is always
# the project root.
#
# To enable the hook, slap it in your project root under .git/hooks

TEXT_RESET='\x1b[0m'
TEXT_RED='\x1b[31m'

TEST_DIR='samples/tests'

get_python_cmd() {
    if python --version 1>/dev/null; then
        printf "python"
    elif python3 --version 1>/dev/null; then
        printf "python3"
    elif py --version 1>/dev/null; then
        printf "py"
    else
        printf "Could not find a valid Python interpreter. Please make sure Python is installed!\n"
        exit 1
    fi
}

PYTHON_CMD="$(get_python_cmd)"

cd ${TEST_DIR}

if ! ${PYTHON_CMD} -m unittest discover; then
    printf "${TEXT_RED}Unittests have failed! Commit is not allowed!${TEXT_RESET}\n"
    exit 1
fi
