#!/usr/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# This hook automatically prepends the names of the files that
# were changed in the commit to the commit message. This can be
# useful for plugins that forward pushes to github repositories
# to team leaders automatically so they may tell at a glance
# which files have been edited.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

COMMIT_FILES=$(git diff --cached --name-only | tr "\n" " ")
COMMIT_FILE_NAMES=""

CNT_SEPS=$(printf ${COMMIT_FILES} | grep -c $' ')
CNT_FOR=0
for file in ${COMMIT_FILES}; do
	CNT_FOR=$((CNT_FOR+1))
	file=$(basename ${file})
	if [ -z "${COMMIT_FILE_NAMES}" ]; then
		COMMIT_FILE_NAMES="${file}"
	else
		COMMIT_FILE_NAMES="${COMMIT_FILE_NAMES}, ${file}"
	fi
	if [ ${CNT_FOR} -lt ${CNT_SEPS} ]; then
		COMMIT_FILE_NAMES="${COMMIT_FILE_NAMES}, "
	fi
done

COMMIT_FILE_NAMES="${COMMIT_FILE_NAMES}: "

printf "${COMMIT_FILE_NAMES}" | cat - ${COMMIT_MSG_FILE} > .tmp_msg && mv .tmp_msg ${COMMIT_MSG_FILE}
